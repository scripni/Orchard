@using Orchard;
@using Orchard.DisplayManagement.Descriptors;
@using Orchard.DesignerTools.Services;
@using System.Xml;

@{
    Script.Require("jQueryUI_Tabs");
    Script.Include("orchard-designertools-shapetracing.js");
    Style.Include("orchard-designertools-shapetracing.css");

    var workContext = ViewContext.GetWorkContext();
    var shapeTable = workContext.Resolve<IShapeTableManager>().GetShapeTable(workContext.CurrentTheme.Id);
    var descriptor = shapeTable.Descriptors[Model.Metadata.Type];
}

@functions {
    string FormatShapeFilename(string type, string themeId) {
        return "~/Themes/" + themeId + "/Views/" + type.Replace("__", "-").Replace("_", ".") + ".cshtml";
    }

    string DumpObject(object o) {
        var dumper = new ObjectDumper(6);
        var el = dumper.Dump(o, "Model");
        using(var sw = new StringWriter()) {
            el.WriteTo(new XmlTextWriter(sw) { Formatting = Formatting.Indented });
            return sw.ToString();
        }
    }
}

<div class="shape-tracing wrapper shapeType-@Model.Metadata.Type shapeId-@Model.GetHashCode() " title="@Model.Metadata.Type">
	@Display(Model.Metadata.ChildContent)

    <div class="shape-tracing meta shapeId-@Model.GetHashCode()" style="display:none">
		<ul class="debuggerMenu">
			<li class="shape selected first"><a href="#">Shape</a></li>
			<li class="model middle"><a href="#">Model</a></li>
			<li class="placement middle"><a href="#">Placement</a></li>
			<li class="templates middle"><a href="#">Templates</a></li>
			<li class="source middle"><a href="#">Source</a></li>
			<li class="html last"><a href="#">HTML</a></li>
		</ul>

		<div class="content">
			<div class="shape">
				Shape: @Model.Metadata.Type <br />
				Definition: @descriptor.BindingSource  <br />
				Display Type: @(Model.Metadata.DisplayType  ?? "n/a")<br />
				Position: @(Model.Metadata.Position ?? "n/a") <br />
				Placement Source: @(Model.Metadata.PlacementSource ?? "n/a") <br />
			</div>
			
			<div class="model" style="display:none">
				<pre>@DumpObject((object)Model)</pre>
			</div>

			<div class="placement" style="display:none">
				@if(Model.Metadata.PlacementSource != null) {
					// System.IO.File.ReadAllText(VirtualPathUtility.GetFileName(Model.Metadata.PlacementSource))
				} 
				else {
					<div>n/a</div>
				}
			</div>

			<div class="templates" style="display:none">
				<div class="alternates">
					<span>Alternates</span>
					@foreach(var alternate in Model.Metadata.Alternates) {
						var formatted = @FormatShapeFilename(alternate, workContext.CurrentTheme.Id);
						<div>@formatted</div>
					}
				</div>
				<div class="wrappers">
					<span >Wrappers</span>
					@foreach(var wrapper in Model.Metadata.Wrappers) {
						if(wrapper != "ShapeTracing_Wrapper") {
							var formatted = @FormatShapeFilename(wrapper, workContext.CurrentTheme.Id);
							<div>@formatted</div>
						}
					}
				</div>
			</div>

			<div class="source" style="display:none">
			</div>

			<div class="html" style="display:none">
				<pre>@HttpUtility.HtmlEncode(Display(Model.Metadata.ChildContent))</pre>
			</div>
		</div>
	</div>
</div>
