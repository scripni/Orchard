@model Orchard.Warmup.Models.WarmupSettingsPart
@using Orchard.Utility.Extensions;
@using Orchard.Warmup.Models;

@{ Layout.Title = T("Settings").ToString(); }

@using (Html.BeginFormAntiForgeryPost()) {
    @Html.ValidationSummary()

<fieldset>
    <legend>@T("Settings for Warmup")</legend>
    <div>
        <label for="@Html.FieldIdFor(m => m.Urls)">@T("Urls for which static warmup pages will be generated")</label>
        @Html.TextAreaFor(m => m.Urls, new { @class = "textMedium" })
        <span class="hint">@T("This must be a set of relative paths, e.g., /, /About")</span>
    </div>
</fieldset>
<fieldset>
    <div>
        @Html.EditorFor(m => m.Scheduled)
        <label class="forcheckbox" for="@Html.FieldIdFor(m => m.Scheduled)">@T("Generate warmup pages periodically")</label>
    </div>
    <div data-controllerid="@Html.FieldIdFor(m => m.Scheduled)">
        @T("Every") 
        @Html.TextBoxFor(m => m.Delay, new { @class = "text-small" }) 
        @T("minutes")
        @Html.ValidationMessage("Delay", "*")
    </div>
    <div>
        @Html.EditorFor(m => m.OnPublish)
        <label class="forcheckbox" for="@Html.FieldIdFor(m => m.OnPublish)">@T("Generate warmup pages each time some content is published")</label>
    </div>
</fieldset>
<fieldset>
    <button class="primaryAction" name="submit" value="@T("Save")" type="submit">@T("Save")</button>
    <button class="primaryAction" name="submit.Generate" value="@T("Save and generate")" type="submit">@T("Save and generate")</button>
</fieldset>    
}
