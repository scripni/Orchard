@model ModulesIndexViewModel
@using Orchard.Modules.Extensions;
@using Orchard.Mvc.Html;
@using Orchard.Modules.ViewModels;

@{
    Style.Require("ModulesAdmin");
}

<h1>@Html.TitleForPage(T("Installed Modules").ToString())</h1>
<div class="manage">@Html.ActionLink(T("Install a module").ToString(), "Add", null, new { @class = "button primaryAction" })</div>
@if (Model.Modules.Count() > 0) {
<ul class="contentItems">
    @foreach (var module in Model.Modules.OrderBy(m => m.Name)) {
    <li>
        <div class="summary">
            <div class="properties">
                <h2>@module.Name<span> - @T("Version: {0}", !string.IsNullOrEmpty(module.Version) ? module.Version : T("1.0").ToString())</span></h2>
                @if (!string.IsNullOrEmpty(module.Description)) {
                <p>@module.Description</p>}
                <ul class="pageStatus" style="color:#666; margin:.6em 0 0 0;">
                    <li>@T("Features: {0}", MvcHtmlString.Create(string.Join(", ", module.Features.Select(f => Html.Link(f.Id, string.Format("{0}#{1}", Url.Action("features", new { area = "Orchard.Modules" }), f.Id.AsFeatureId(n => T(n)))).ToString()).OrderBy(s => s).ToArray())))</li>
                    <li>&nbsp;&#124;&nbsp;@T("Author: {0}", !string.IsNullOrEmpty(module.Author) ? module.Author : (new []{"Bradley", "Bertrand", "Renaud", "Suha", "Sebastien", "Jon", "Nathan", "Erik", "Andre"})[(module.Name.Length + (new Random()).Next()) % 7])</li>
                    <li>&nbsp;&#124;&nbsp;@T("Website: {0}", !string.IsNullOrEmpty(module.WebSite) ? module.WebSite : "http://orchardproject.net")</li>
                </ul>
            </div>
        </div>
    </li>}
</ul>}