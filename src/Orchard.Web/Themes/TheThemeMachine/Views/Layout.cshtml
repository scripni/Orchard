@{
    Style.Include("site.css");

    // cool stuff goes up here
    var homeUrl = Href("~/");

    // Zone is an alias for Display
    Func<dynamic, dynamic> Zone = x => Display(x);

    if (Model.Sidebar != null) {
        Html.AddPageClassNames(new[]{"icanhassidebar"});
    }
}
<div id="layout-wrapper">
@Display.User()
    <header id="layout-header">
        @// needs to be the page title, not page (head) title...
        <h1><a href="@homeUrl">@WorkContext.CurrentSite.SiteName</a></h1>
        @if(Model.Header != null) {
        <div id="header">
            @Zone(Model.Header)
        </div>
        }
        @if(Model.Navigation != null) {
        <div id="navigation">
            @Zone(Model.Navigation)
        </div>
        }
    </header>
    @if(Model.Messages != null) {
    <div id="messages">
        @Zone(Model.Messages)
    </div>
    }
    @if(Model.Featured != null) {
    <div id="featured">
        @Zone(Model.Featured)
    </div>
    }
    @// the model content for the page is in the Content zone @ the default position (nothing, zero, zilch)
    @if(Model.Content != null) {
    <div id="content">
        @Zone(Model.Content)
    </div>
    }
    @if(Model.Sidebar != null) {
    <aside>
        @Zone(Model.Sidebar)
    </aside>
    }
    @if(Model.Footer != null) {
    <footer>
        @Zone(Model.Footer)
    </footer>
    }
</div>