// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.2.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Orchard.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Content Types")]
    public partial class ContentTypesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ContentTypes.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Content Types", "In order to add new types to my site\r\nAs an adminitrator\r\nI want to create create" +
                    " content types", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can create a new content type")]
        public virtual void ICanCreateANewContentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can create a new content type", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("I have installed Orchard");
#line 8
testRunner.And("I have installed \"Orchard.ContentTypes\"");
#line 9
testRunner.When("I go to \"Admin/ContentTypes\"");
#line 10
testRunner.Then("I should see \"<a[^>]*>.*?Create new type</a>\"");
#line 11
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table1.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
            table1.AddRow(new string[] {
                        "Name",
                        "Event"});
#line 12
testRunner.And("I fill in", ((string)(null)), table1);
#line 16
testRunner.And("I hit \"Create\"");
#line 17
testRunner.And("I go to \"Admin/ContentTypes/\"");
#line 18
testRunner.Then("I should see \"Event\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can\'t create a content type with an already existing name")]
        public virtual void ICanTCreateAContentTypeWithAnAlreadyExistingName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can\'t create a content type with an already existing name", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("I have installed Orchard");
#line 22
testRunner.And("I have installed \"Orchard.ContentTypes\"");
#line 23
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table2.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
            table2.AddRow(new string[] {
                        "Name",
                        "Event"});
#line 24
testRunner.And("I fill in", ((string)(null)), table2);
#line 28
testRunner.And("I hit \"Create\"");
#line 29
testRunner.And("I go to \"Admin/ContentTypes/\"");
#line 30
testRunner.Then("I should see \"Event\"");
#line 31
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table3.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
            table3.AddRow(new string[] {
                        "Name",
                        "Event-2"});
#line 32
testRunner.And("I fill in", ((string)(null)), table3);
#line 36
testRunner.And("I hit \"Create\"");
#line 37
testRunner.Then("I should see \"<h1[^>]*>.*?New Content Type.*?</h1>\"");
#line 38
testRunner.And("I should see \"validation-summary-errors\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can\'t create a content type with an already existing technical name")]
        public virtual void ICanTCreateAContentTypeWithAnAlreadyExistingTechnicalName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can\'t create a content type with an already existing technical name", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("I have installed Orchard");
#line 42
testRunner.And("I have installed \"Orchard.ContentTypes\"");
#line 43
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table4.AddRow(new string[] {
                        "DisplayName",
                        "Dinner"});
            table4.AddRow(new string[] {
                        "Name",
                        "Dinner"});
#line 44
testRunner.And("I fill in", ((string)(null)), table4);
#line 48
testRunner.And("I hit \"Create\"");
#line 49
testRunner.And("I go to \"Admin/ContentTypes/\"");
#line 50
testRunner.Then("I should see \"Dinner\"");
#line 51
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table5.AddRow(new string[] {
                        "DisplayName",
                        "Dinner2"});
            table5.AddRow(new string[] {
                        "Name",
                        "Dinner"});
#line 52
testRunner.And("I fill in", ((string)(null)), table5);
#line 56
testRunner.And("I hit \"Create\"");
#line 57
testRunner.Then("I should see \"<h1[^>]*>.*?New Content Type.*?</h1>\"");
#line 58
testRunner.And("I should see \"validation-summary-errors\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can\'t rename a content type with an already existing name")]
        public virtual void ICanTRenameAContentTypeWithAnAlreadyExistingName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can\'t rename a content type with an already existing name", ((string[])(null)));
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given("I have installed Orchard");
#line 62
testRunner.And("I have installed \"Orchard.ContentTypes\"");
#line 63
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table6.AddRow(new string[] {
                        "DisplayName",
                        "Dinner"});
            table6.AddRow(new string[] {
                        "Name",
                        "Dinner"});
#line 64
testRunner.And("I fill in", ((string)(null)), table6);
#line 68
testRunner.And("I hit \"Create\"");
#line 69
testRunner.And("I go to \"Admin/ContentTypes/\"");
#line 70
testRunner.Then("I should see \"Dinner\"");
#line 71
testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table7.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
            table7.AddRow(new string[] {
                        "Name",
                        "Event"});
#line 72
testRunner.And("I fill in", ((string)(null)), table7);
#line 76
testRunner.And("I hit \"Create\"");
#line 77
testRunner.And("I go to \"Admin/ContentTypes/\"");
#line 78
testRunner.Then("I should see \"Event\"");
#line 79
testRunner.When("I go to \"Admin/ContentTypes/Edit/Dinner\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table8.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
#line 80
testRunner.And("I fill in", ((string)(null)), table8);
#line 83
testRunner.And("I hit \"Save\"");
#line 84
testRunner.Then("I should see \"validation-summary-errors\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
