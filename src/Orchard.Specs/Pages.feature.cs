// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.4.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Orchard.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Pages")]
    public partial class PagesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Pages.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Pages", "In order to add content pages to my site\r\nAs an author\r\nI want to create, publish" +
                    " and edit pages", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("In the admin (menu) there is a link to create a Page")]
        public virtual void InTheAdminMenuThereIsALinkToCreateAPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("In the admin (menu) there is a link to create a Page", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I have installed Orchard");
#line 8
    testRunner.When("I go to \"admin\"");
#line 9
    testRunner.Then("I should see \"<a href=\"/Admin/Contents/Create/Page\">Page</a>\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can create and publish a new Page")]
        public virtual void ICanCreateAndPublishANewPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can create and publish a new Page", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
    testRunner.Given("I have installed Orchard");
#line 13
    testRunner.When("I go to \"admin/contents/create/page\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table1.AddRow(new string[] {
                        "Routable.Title",
                        "Super Duper"});
            table1.AddRow(new string[] {
                        "Body.Text",
                        "This is super."});
#line 14
        testRunner.And("I fill in", ((string)(null)), table1);
#line 18
        testRunner.And("I hit \"Publish Now\"");
#line 19
        testRunner.And("I go to \"super-duper\"");
#line 20
    testRunner.Then("I should see \"<h1[^>]*>.*?Super Duper.*?</h1>\"");
#line 21
        testRunner.And("I should see \"This is super.\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("If I create a page which gets a conflicting path generated its path is made to be" +
            " unique")]
        public virtual void IfICreateAPageWhichGetsAConflictingPathGeneratedItsPathIsMadeToBeUnique()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("If I create a page which gets a conflicting path generated its path is made to be" +
                    " unique", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
    testRunner.Given("I have installed Orchard");
#line 25
    testRunner.When("I go to \"admin/contents/create/page\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table2.AddRow(new string[] {
                        "Routable.Title",
                        "Super Duper"});
            table2.AddRow(new string[] {
                        "Body.Text",
                        "This is super."});
#line 26
        testRunner.And("I fill in", ((string)(null)), table2);
#line 30
        testRunner.And("I hit \"Publish Now\"");
#line 31
        testRunner.And("I go to \"super-duper\"");
#line 32
    testRunner.Then("I should see \"<h1[^>]*>.*?Super Duper.*?</h1>\"");
#line 33
        testRunner.And("I should see \"This is super.\"");
#line 34
    testRunner.When("I go to \"admin/contents/create/page\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table3.AddRow(new string[] {
                        "Routable.Title",
                        "Super Duper"});
            table3.AddRow(new string[] {
                        "Body.Text",
                        "This is super number two."});
#line 35
        testRunner.And("I fill in", ((string)(null)), table3);
#line 39
        testRunner.And("I hit \"Publish Now\"");
#line 40
        testRunner.And("I go to \"super-duper-2\"");
#line 41
    testRunner.Then("I should see \"<h1[^>]*>.*?Super Duper.*?</h1>\"");
#line 42
        testRunner.And("I should see \"This is super number two.\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
